#coding:utf-8
import threading
import Queue
import urllib,progressbar
import requests
threads=50
#目标url
target_url=""
wordlist_file="/*/php.txt"
resume=None
header={"User-Agent":"Mozilla/5.0 (Windows NT 6.1; rv:40.0) Gecko/20100101 Firefox/40.0"}

def build_wordlist(wordlist_file):
    #读入字典文件
    fd=open(wordlist_file,"rb")
    raw_words=fd.readlines()
    fd.close()

    found_resume=False
    words=Queue.Queue()

    for word in raw_words:
        word=word.rstrip()
        if resume is not None:
            if found_resume:
                words.put(word)
            else:
                if word==resume:
                    found_resume=True
                    print "Resuming wordlist from:%s"%resume
        else:
            words.put(word)
    return words

def dir_bruter(word_queue,extensions=None):
    write_list = []
    bpg=progressbar.ProgressBar().start()
    while not word_queue.empty():
        attempt=word_queue.get()
        attempt_list=[]
        #检查是否有文件扩展名,如果没有就是我们要暴力破解的路径
        if "." not in attempt and attempt[-1]!='/':
            attempt_list.append("%s/"%attempt)
        else:
            attempt_list.append("%s"%attempt)

    #如果我们想暴力扩展
        if extensions:
            for extension in extensions:
                attempt_list.append("%s%s"%(attempt,extension))
        #迭代我们要尝试的文件列表
        for brute in attempt_list:
            url="%s%s"%(target_url,urllib.quote(brute))
            # print brute
            # url="%s%s"%(target_url,brute)
            # print url
            try:
                # req=urllib2.Request(("http://"+url),headers=header)
                req=requests.get(url)
                # response=urllib2.urlopen(req)

                if len(req.content) and req.status_code!=404:
                    print req.status_code
                    print "[%d]=>%s"%(req.status_code,url)
                    print bpg.update(brute)
                    write_list.append(str("[!]%d=>%s"%(req.status_code,url)))
            except requests.HTTPError,e:
                if hasattr(e,'status_code') and e.status_code!=404:
                    print "[!]%d=>%s"%(e.status_code,url)
                    # write_list.append(str("[!]%d=>%s"%(e.status_code,url)))
                pass
    f=open("./1.txt","w")
    for i in range(len(write_list)):
        f.write(write_list[i])
    f.close()

if __name__ == '__main__':

    word_queue=build_wordlist(wordlist_file)
    extensions=[".php"]
    for i in range(threads):
        t=threading.Thread(target=dir_bruter(word_queue,None))
        t.start()
